By default via rpc we can only pass 32bit params (go figure...)
when passing something big (need to check optee_do_call_from_abort usage) we have to split it using reg_pair_from_64


Another part to fix (easier), need to add defines for the forwarding part (both worlds) to pass correct registers (expand with register structures... and #ifdef ARM64)

Need to double check also the "passing back" of results from optee.

linux/arch/arm/mm/fault.c
optee_do_call_from_abort(OPTEE_MSG_FORWARD_EXECUTION, shm_pa,
						(unsigned long)shm, target_proc->pid,
						mm_pa, num_of_map_entries, 0, 0);


http://infocenter.arm.com/help/topic/com.arm.doc.den0028b/ARM_DEN0028B_SMC_Calling_Convention.pdf

all optee calls are done using ARM_SMCC_SMC_32 calling convetion better avoid changing that stuff


steps for porting:
- interazione (call/smc) una e' drm_exec
- caricamento del blob e inizio/chiusura sessione
- l'altra e' quella per il forward dei memory mappings
    + enable/disable
- forward di registri
in questo ordine


==================
TODO: Notes from porting, we should evaluate how many pages we can allocate before we fail (or it become too slow).

